@page "/countries"
@inject BlazorWASM.Services.APIService APIService

@if (countries == null)
{
	<p>Loading...</p>
}
else
{
	<h3>Countries</h3>

	<Grid TItem="Country"
		  AllowPaging="true"
		  AllowSorting="true"
		  AllowFiltering="true"
		  DataProvider="CountriesDataProvider"
		  Class="table table-hover table-bordered table-striped"
		  PageSize="15"
		  Responsive="true">

		<GridColumns>
			<GridColumn TItem="Country" HeaderText="Id" PropertyName="Id" SortKeySelector="item => item.Id" IsVisible="false">
				@context.Id
			</GridColumn>
            <GridColumn TItem="Country">
            <Button Class="btn-primary justify-content-center" @onclick="() => ToggleCountryDashboard(context)">
            View more
            </Button>
            </GridColumn>
			<GridColumn TItem="Country" HeaderText="Name (Official)" PropertyName="Name.Official" SortKeySelector="item => item.Name.Official">
				@context.Name?.Official
			</GridColumn>
			<GridColumn TItem="Country" HeaderText="Region" PropertyName="Region" SortKeySelector="item => item.Region">
				@context.Region
			</GridColumn>
			<GridColumn TItem="Country" HeaderText="Continent" PropertyName="Continent" SortKeySelector="item => item.Continent">
				@context.Continent
			</GridColumn>
		</GridColumns>
	</Grid>
}
@code {
	[Inject]
	NavigationManager NavigationManager { get; set; } = default!;
	[Parameter]
	public string? countryId { get; set; }
	public List<Country>? countries;

	protected override async Task OnInitializedAsync()
	{
		countries = await APIService.GetAllCountriesAsync() ?? new List<Country>();
	}

	private async Task<GridDataProviderResult<Country>> CountriesDataProvider(GridDataProviderRequest<Country> request)
	{
		return await Task.FromResult(request.ApplyTo(countries));
	}

	public void ToggleCountryDashboard(Country context)
	{
		if (context != null)
		{
			var country = (context as Country);
			var navUrl = $"/countries/{country.Id}";
			NavigationManager.NavigateTo(navUrl);
		}
	}
}